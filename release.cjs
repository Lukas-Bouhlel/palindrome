const { execSync } = require('child_process');

const bump = process.argv[2] || 'patch';

// Fonction pour obtenir le dernier tag
function getLatestGitTag() {
  try {
    const tag = execSync('git describe --tags --abbrev=0').toString().trim();
    return tag.startsWith('v') ? tag.slice(1) : tag; // Supprimer le 'v' si pr√©sent
  } catch {
    return null; // Si aucun tag, retourne null
  }
}

// Fonction pour incr√©menter une version semver
function bumpVersion(version, level) {
  const parts = version.split('.').map(Number);
  if (level === 'major') {
    parts[0]++;
    parts[1] = 0;
    parts[2] = 0;
  } else if (level === 'minor') {
    parts[1]++;
    parts[2] = 0;
  } else {
    parts[2]++;
  }
  return parts.join('.');
}

try {
  // D√©terminer la derni√®re version
  let latestTag = getLatestGitTag();
  let newVersion = bumpVersion(latestTag || '0.0.0', bump);

  // V√©rifier si ce tag existe d√©j√†
  try {
    execSync(`git rev-parse v${newVersion}`);
    console.log(
      `‚ö†Ô∏è Tag v${newVersion} existe d√©j√†. Incr√©mentation √† la version suivante...`
    );
    newVersion = bumpVersion(newVersion, bump); // Incr√©menter encore si le tag existe
  } catch {
    // Pas de probl√®me si le tag n'existe pas
  }

  console.log(`üöÄ Nouvelle version : v${newVersion}`);

  // Mise √† jour de package.json sans cr√©er un tag Git
  execSync(`npm version ${newVersion} --no-git-tag-version`, {
    stdio: 'inherit',
  });

  // Commit et push des changements
  execSync('git add .', { stdio: 'inherit' });
  execSync(`git commit -m "chore(release): v${newVersion}"`, {
    stdio: 'inherit',
  });

  // Cr√©ation du tag et push du tag vers GitHub
  execSync(`git tag v${newVersion}`, { stdio: 'inherit' });
  execSync('git push origin HEAD:main && git push --tags', {
    stdio: 'inherit',
  });

  // Publication sur npm
  execSync('npm publish', { stdio: 'inherit' });

  console.log(`‚úÖ Release v${newVersion} publi√©e avec succ√®s.`);
} catch (err) {
  console.error(`‚ùå Erreur pendant la release : ${err.message || err}`);
  process.exit(1);
}
